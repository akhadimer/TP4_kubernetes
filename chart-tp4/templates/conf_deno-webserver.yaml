apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: deno-webserver
  name: deno-webserver
  namespace: default
spec:
  replicas: {{ .Values.webserver.replicaCount }}
  selector:
    matchLabels:
      app: deno-webserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: deno-webserver
    spec:
      containers:
      - image: "{{ .Values.webserver.image.repository }}:{{ .Values.webserver.image.tag}}"
        imagePullPolicy: {{ .Values.webserver.image.pullPolicy }}
        name: deno-webserver
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: {{ .Values.webserver.volumeMount.mountPath }}
            name: {{ .Values.webserver.volumeMount.name }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: {{ .Values.webserver.volumes.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.webserver.volumes.claimName }}